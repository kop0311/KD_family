# KD Family Caddy 配置文件

# 主域名配置
kdfamily.local {
    # 反向代理到前端应用
    reverse_proxy frontend:3000 {
        # 健康检查
        health_uri /api/health
        health_interval 30s
        health_timeout 5s
        
        # 负载均衡（如果有多个实例）
        lb_policy round_robin
        
        # 请求头设置
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }
    
    # 静态文件缓存
    @static {
        path *.css *.js *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2 *.ttf *.eot
    }
    header @static Cache-Control "public, max-age=31536000, immutable"
    
    # 安全头设置
    header {
        # 防止点击劫持
        X-Frame-Options "SAMEORIGIN"
        
        # 防止MIME类型嗅探
        X-Content-Type-Options "nosniff"
        
        # XSS保护
        X-XSS-Protection "1; mode=block"
        
        # 严格传输安全
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # 内容安全策略
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;"
        
        # 推荐人策略
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # 权限策略
        Permissions-Policy "camera=(), microphone=(), geolocation=()"
    }
    
    # 压缩
    encode gzip zstd
    
    # 日志
    log {
        output file /var/log/caddy/kdfamily.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
    
    # 错误页面
    handle_errors {
        @404 expression {http.error.status_code} == 404
        handle @404 {
            rewrite * /404.html
            file_server
        }
        
        @5xx expression {http.error.status_code} >= 500
        handle @5xx {
            rewrite * /500.html
            file_server
        }
    }
}

# API 子域名配置
api.kdfamily.local {
    # 反向代理到后端API
    reverse_proxy backend:8000 {
        # 健康检查
        health_uri /health
        health_interval 30s
        health_timeout 5s
        
        # 请求头设置
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }
    
    # CORS 处理
    @cors_preflight method OPTIONS
    handle @cors_preflight {
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Content-Type, Authorization"
        header Access-Control-Max-Age "86400"
        respond "" 204
    }
    
    # API 限流
    rate_limit {
        zone api_zone {
            key {remote}
            events 100
            window 1m
        }
        
        zone api_burst {
            key {remote}
            events 10
            window 1s
        }
    }
    
    # 压缩
    encode gzip zstd
    
    # 日志
    log {
        output file /var/log/caddy/api.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
}

# WebSocket 配置（如果需要）
ws.kdfamily.local {
    reverse_proxy backend:8000 {
        # WebSocket 特定配置
        header_up Connection {>Connection}
        header_up Upgrade {>Upgrade}
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }
    
    # 日志
    log {
        output file /var/log/caddy/websocket.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        format json
        level INFO
    }
}

# 监控面板（仅内网访问）
monitoring.kdfamily.local {
    # IP 白名单
    @internal {
        remote_ip 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 127.0.0.1
    }
    
    handle @internal {
        # Grafana 代理
        route /grafana/* {
            uri strip_prefix /grafana
            reverse_proxy grafana:3000
        }
        
        # Prometheus 代理
        route /prometheus/* {
            uri strip_prefix /prometheus
            reverse_proxy prometheus:9090
        }
        
        # 默认重定向到 Grafana
        redir / /grafana/
    }
    
    # 拒绝外网访问
    handle {
        respond "Access Denied" 403
    }
}

# 全局配置
{
    # 自动HTTPS
    auto_https on
    
    # 邮箱（用于Let's Encrypt）
    email admin@kdfamily.local
    
    # 管理端点
    admin localhost:2019
    
    # 全局日志
    log {
        output file /var/log/caddy/access.log {
            roll_size 100mb
            roll_keep 10
            roll_keep_for 2160h
        }
        format json
        level INFO
    }
    
    # 服务器配置
    servers {
        protocol {
            experimental_http3
        }
    }
    
    # 存储配置
    storage file_system {
        root /data/caddy
    }
}

# 重定向 www 到非 www
www.kdfamily.local {
    redir https://kdfamily.local{uri} permanent
}

# HTTP 到 HTTPS 重定向
http://kdfamily.local {
    redir https://kdfamily.local{uri} permanent
}

http://api.kdfamily.local {
    redir https://api.kdfamily.local{uri} permanent
}
