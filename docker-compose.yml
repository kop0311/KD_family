version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: kdfamily_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-kdfamily}
      POSTGRES_USER: ${DB_USER:-kdfamily_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-kdfamily_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema:/docker-entrypoint-initdb.d
    networks:
      - kdfamily_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-kdfamily_user} -d ${DB_NAME:-kdfamily}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin数据库管理界面
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kdfamily_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kdfamily.local
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - kdfamily_network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Adminer数据库管理界面（轻量级替代）
  adminer:
    image: adminer:latest
    container_name: kdfamily_adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - kdfamily_network
    restart: unless-stopped

  # 应用程序（可选）
  app:
    build: .
    container_name: kd_family
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - ./uploads:/app/uploads
    networks:
      - kdfamily_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  kdfamily_network:
    driver: bridge